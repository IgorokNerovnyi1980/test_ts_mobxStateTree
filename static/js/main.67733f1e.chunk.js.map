{"version":3,"sources":["baseStyles.ts","Components/Header.tsx","Components/Content.tsx","Components/Button.tsx","Components/Input.tsx","Components/Item.tsx","Components/List.tsx","index.tsx","pages/TodoPage.tsx","App.tsx","models/todos.js"],"names":["BaseStyle","createGlobalStyle","Wrapper","styled","header","Header","div","Content","props","children","button","color","Button","onClick","fnClick","label","Title","InputWrap","BtnWrap","Input","useState","inputValue","setInputValue","type","value","onChange","e","target","placeholder","text","length","alert","filtredTodos","addTodo","observer","el","removeTodo","isReady","toggle","store","App","snapshot","Dump","p","filteredTodos","todos","onToggleStatus","id","get","map","obj","key","TodoPage","filterTodos","SHOW_ALL","filterType","types","union","literal","TODO_FILTERS","Todo","model","string","identifierNumber","actions","self","remove","getRoot","TodoStore","array","filter","optional","views","reduce","maxId","todo","Math","max","unshift","destroy","setFilter","includes","create","render","document","getElementById"],"mappings":"20CAEO,IAAMA,EAAYC,YAAH,K,gSCCtB,IAAMC,EAAUC,IAAOC,OAAV,KAsBEC,EARA,WAEb,OACE,kBAACH,EAAD,KACE,4BAHqB,wC,uTCf3B,IAAMA,EAAUC,IAAOG,IAAV,KAiBEC,EAJW,SAACC,GACzB,OAAO,kBAAC,EAAD,KAAUA,EAAMC,W,odCdzB,IAAMP,EAAUC,IAAOO,OAAV,KAUF,SAACF,GAAD,OAAWA,EAAMG,SAyBbC,EAPkB,SAACJ,GAChC,OACE,kBAAC,EAAD,CAASG,MAAOH,EAAMG,MAAOE,QAASL,EAAMM,SACzCN,EAAMO,Q,m7BC9Bb,IAAMb,EAAUC,IAAOG,IAAV,KAQPU,EAAQb,IAAOG,IAAV,KAeLW,EAAYd,IAAOG,IAAV,KAWTY,EAAUf,IAAOG,IAAV,KAmEEa,EAtDiB,SAACX,GAAW,IAAD,EACLY,mBAAiB,IADZ,mBAClCC,EADkC,KACtBC,EADsB,KAyBzC,OACE,kBAAC,EAAD,KACE,kBAACN,EAAD,KACE,qCAEF,kBAACC,EAAD,KACE,2BACEM,KAAK,OACLC,MAAOH,EACPI,SA/Bc,SAACC,GACrBJ,EAAcI,EAAEC,OAAOH,QA+BjBI,YAAY,uBAGhB,kBAACV,EAAD,KACE,kBAAC,EAAD,CACEH,MAAM,SACNJ,MAAM,OACNG,QAAS,WA1BU,IAACe,EACN,KADMA,EA0BcR,GAzB/BS,OACPC,MAAM,sBAENvB,EAAMwB,aAAaH,GACnBP,EAAc,QAuBZ,kBAAC,EAAD,CACEP,MAAM,MACNJ,MAAM,QACNG,QAAS,WAxCS,IAACe,EACL,KADKA,EAwCcR,GAvC9BS,OACPC,MAAM,sBAENvB,EAAMyB,QAAQJ,GACdP,EAAc,W,qlBC1DpB,IAAMpB,EAAUC,IAAOG,IAAV,KAsBPY,EAAUf,IAAOG,IAAV,KA2BE4B,eAjBgB,SAAC1B,GAAW,IACjC2B,EAAmB3B,EAAnB2B,GAAIC,EAAe5B,EAAf4B,WACZ,OACE,kBAAC,EAAD,KACE,2BAAID,EAAGpB,OACP,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQA,MAAM,SAASJ,MAAM,OAAOG,QAAS,kBAAMsB,EAAWD,MAC9D,kBAAC,EAAD,CACEpB,MAAOoB,EAAGE,QAAU,OAAS,cAC7B1B,MAAOwB,EAAGE,QAAU,QAAU,MAC9BvB,QAAS,kBAAMqB,EAAGG,iB,ovBC1C5B,ICeIC,EAUeC,EAAUD,EAPJE,EDlBnBvC,EAAUC,IAAOG,IAAV,KAQPU,EAAQb,IAAOG,IAAV,KAaLC,EAAUJ,IAAOG,IAAV,KAKPoC,EAAOvC,IAAOwC,EAAV,KAyCKT,eA9BgB,SAAC1B,GAAW,IAAD,EACKA,EAAM+B,MAA3CK,EADgC,EAChCA,cAAeR,EADiB,EACjBA,WAAYS,EADK,EACLA,MAE7BC,EAAiB,SAACC,GACtBF,EAAMG,IAAID,GAAIT,UAGhB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,oCAEF,kBAAC,EAAD,KACGM,EAAcd,OACbc,EAAcK,KAAI,SAACC,GAAD,OAChB,kBAAC,EAAD,CACEC,IAAKD,EAAIH,GACTZ,GAAIe,EACJd,WAAYA,EACZU,eAAgBA,OAIpB,kBAACJ,EAAD,6BE3CKU,EAZoB,SAAC,GAAe,IAAbb,EAAY,EAAZA,MACpC,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAON,QAASM,EAAMN,QAASD,aAAcO,EAAMc,cACnD,kBAAC,EAAD,CAAMd,MAAOA,OCCNC,EATe,SAAChC,GAC7B,OACE,oCACE,kBAACR,EAAD,MACA,kBAAC,EAAD,CAAUuC,MAAO/B,EAAM+B,U,gBCVvBe,EAAW,WAEXC,GAAaC,IAAMC,MAAN,MAAAD,IAAK,YAAU,CAACF,GAAUL,IAAIO,IAAME,WACjDC,GAAY,eACfL,GAAW,kBAAM,KAGdM,GAAOJ,IACVK,MAAM,CACL9C,MAAOyC,IAAMM,OACbzB,SAAS,EACTU,GAAIS,IAAMO,mBAEXC,SAAQ,SAACC,GAAD,MAAW,CAClBC,OADkB,WAEhBC,YAAQF,GAAM7B,WAAW6B,IAE3B3B,OAJkB,WAKhB2B,EAAK5B,SAAW4B,EAAK5B,aAkCZ+B,GA9BGZ,IACfK,MAAM,CACLhB,MAAOW,IAAMa,MAAMT,IACnBU,OAAQd,IAAMe,SAAShB,GAAYD,KAEpCkB,OAAM,SAACP,GAAD,MAAW,CAChB,oBACE,OAAOA,EAAKpB,MAAMyB,OAAOX,GAAaM,EAAKK,cAG9CN,SAAQ,SAACC,GAAD,MAAW,CAClBhC,QADkB,SACVlB,GACN,IAAMgC,EACJkB,EAAKpB,MAAM4B,QAAO,SAACC,EAAOC,GAAR,OAAiBC,KAAKC,IAAIF,EAAK5B,GAAI2B,MAAS,GAAK,EACrET,EAAKpB,MAAMiC,QAAQ,CACjB/B,KACAhC,WAGJqB,WATkB,SASPuC,GACTI,YAAQJ,IAEVK,UAZkB,SAYRV,GACRL,EAAKK,OAASA,GAEhBjB,YAfkB,SAeNF,GACVc,EAAKpB,MAAQoB,EAAKpB,MAAMyB,QAAO,qBAAGvD,MAAkBkE,SAAS9B,WHpBhDX,EAITA,EAXeC,EAPJ,CACnBI,MAAO,IAQHN,GAAOwC,YAAQxC,GAKQA,EAJ3BA,EAAQ6B,GAAUc,OAAOzC,GAKzB0C,iBAAO,kBAAC3C,EAAD,CAAKD,MAAOA,IAAW6C,SAASC,eAAe,W","file":"static/js/main.67733f1e.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const BaseStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    -webkit-tap-highlight-color: transparent;\n    ::-webkit-scrollbar {\n    width: 4px;\n    background: grey;\n    border-radius: 2.5px;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 2.5px;\n    background-color: black;\n    -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);\n  }\n  }\n\n  *:after, *:before {\n    box-sizing: inherit;\n    \n  }\n\n  p, ul, li, h1, h2, h3, h4 ,h5 ,h6, html, body{\n    margin: 0;\n    padding: 0;\n  }\n  li{\n    list-style-type: none;\n  }\n  h1, h2, h3, h4,h5, h6{\n    font-weight: normal;\n  }\n  \n  input, textarea, button{\n    outline: none;\n    border:none;\n    background:none;\n  }\n  html{\n    font-size: 62.5%;  /*1rem = 10px*/ \n  }\n\n  body{\n    font-family: 'Helvetica', sans-serif;\n    font-size:1.4rem;\n    color: #000000;\n    font-weight: 400;\n    min-width: 320px;\n    overflow-x: hidden;\n    background: #ffffff;\n    line-height: normal;\n  }\n\n  @media (min-width: 1921px) {\n  body {\n    font-size: 1.6rem;\n  }\n}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.header`\n  width: 100%;\n  height: 8rem;\n  padding: 0 1rem;\n  background-color: white;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  h2 {\n    font-size: 1.2rem;\n    font-weight: 600;\n  }\n`;\n\nconst Header = () => {\n  const appTitle: string = \"Todo App with TS and mobxStateTree\";\n  return (\n    <Wrapper>\n      <h2>{appTitle}</h2>\n    </Wrapper>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  min-width: 100vw;\n  height: calc(100vh - 8rem);\n  padding-top: 2rem;\n  background-color: #f0f0f0;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Content: React.FC = (props) => {\n  return <Wrapper>{props.children}</Wrapper>;\n};\n\nexport default Content;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.button`\n  width: 5rem;\n  height: 3rem;\n  margin-right: 0.5rem;\n  border-radius: 0.3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fef9fd;\n  font-size: 1rem;\n  color: ${(props) => props.color};\n  cursor: pointer;\n  transition: 0.2s ease;\n  ::last-child {\n    margin-right: 0;\n  }\n  :active {\n    transform: scale(0.96);\n    background-color: #ded9dd;\n  }\n`;\n\ninterface Iprops {\n  color?: string;\n  label?: string;\n  fnClick?(): void;\n}\n\nconst Button: React.FC<Iprops> = (props) => {\n  return (\n    <Wrapper color={props.color} onClick={props.fnClick}>\n      {props.label}\n    </Wrapper>\n  );\n};\nexport default Button;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\n\nconst Wrapper = styled.div`\n  width: 60%;\n  min-width: 32rem;\n  max-width: 100rem;\n  margin-bottom: 2rem;\n  border-radius: 1rem;\n  background-color: #d8d8d8;\n`;\nconst Title = styled.div`\n  width: 100%;\n  height: 4rem;\n  border-radius: 1rem 1rem 0 0;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  p {\n    font-size: 1rem;\n    font-weight: 600;\n  }\n`;\n\nconst InputWrap = styled.div`\n  padding: 1rem;\n  border-bottom: 0.1rem solid #c9c9c9;\n  input {\n    width: 100%;\n    height: 3rem;\n    padding-left: 0.5rem;\n    background-color: #fef9fd;\n    border-radius: 0.3rem;\n  }\n`;\nconst BtnWrap = styled.div`\n  width: 100%;\n  padding: 1rem;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\ninterface Iprops {\n  addTodo(text: string): void;\n  filtredTodos(text: string): void;\n}\n\nconst Input: React.FC<Iprops> = (props) => {\n  const [inputValue, setInputValue] = useState<string>(\"\");\n\n  const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSaveNewTodo = (text: string) => {\n    if (text.length === 0) {\n      alert(\"please enter text\");\n    } else {\n      props.addTodo(text);\n      setInputValue(\"\");\n    }\n  };\n\n  const handleFiltredTodos = (text: string) => {\n    if (text.length === 0) {\n      alert(\"please enter text\");\n    } else {\n      props.filtredTodos(text);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Title>\n        <p>Input</p>\n      </Title>\n      <InputWrap>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={onInputChange}\n          placeholder=\"type text here...\"\n        />\n      </InputWrap>\n      <BtnWrap>\n        <Button\n          label=\"filter\"\n          color=\"blue\"\n          fnClick={() => handleFiltredTodos(inputValue)}\n        />\n        <Button\n          label=\"add\"\n          color=\"green\"\n          fnClick={() => handleSaveNewTodo(inputValue)}\n        />\n      </BtnWrap>\n    </Wrapper>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { observer } from \"mobx-react\";\nimport Button from \"./Button\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  min-height: 4rem;\n  margin-bottom: 0.5rem;\n  padding: 0 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: linear-gradient(\n    to bottom,\n    rgba(169, 176, 184, 1) 0%,\n    rgba(115, 126, 130, 1) 100%\n  );\n  :last-child {\n    margin-bottom: 0;\n    border-radius: 0 0 1rem 1rem;\n  }\n  p {\n    font-size: 1rem;\n    color: white;\n  }\n`;\nconst BtnWrap = styled.div`\n  width: 11rem;\n  display: flex;\n`;\ninterface Iprops {\n  el: { id: number; label: string; isReady: boolean } | any;\n  removeTodo(el: Object): void;\n  onToggleStatus(id: number): void;\n}\n\nconst Item: React.FC<Iprops> = (props) => {\n  const { el, removeTodo } = props;\n  return (\n    <Wrapper>\n      <p>{el.label}</p>\n      <BtnWrap>\n        <Button label=\"delete\" color=\"blue\" fnClick={() => removeTodo(el)} />\n        <Button\n          label={el.isReady ? \"done\" : \"in progress\"}\n          color={el.isReady ? \"green\" : \"red\"}\n          fnClick={() => el.toggle()}\n        />\n      </BtnWrap>\n    </Wrapper>\n  );\n};\n\nexport default observer(Item);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { observer } from \"mobx-react\";\nimport Item from \"./Item\";\n\nconst Wrapper = styled.div`\n  width: 60%;\n  min-width: 32rem;\n  max-width: 100rem;\n  margin-bottom: 2rem;\n  border-radius: 1rem;\n  background-color: white;\n`;\nconst Title = styled.div`\n  width: 100%;\n  height: 4rem;\n  border-radius: 1rem 1rem 0 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  p {\n    font-size: 1rem;\n    font-weight: 600;\n  }\n`;\nconst Content = styled.div`\n  background-color: #d8d8d8;\n  border-radius: 0 0 1rem 1rem;\n`;\n\nconst Dump = styled.p`\n  text-align: center;\n  padding: 1rem;\n  font-size: 1.2rem;\n  color: white;\n`;\n\ninterface Iprops {\n  store: any;\n}\n\nconst List: React.FC<Iprops> = (props) => {\n  const { filteredTodos, removeTodo, todos } = props.store;\n\n  const onToggleStatus = (id: number) => {\n    todos.get(id).toggle();\n  };\n\n  return (\n    <Wrapper>\n      <Title>\n        <p>List</p>\n      </Title>\n      <Content>\n        {filteredTodos.length ? (\n          filteredTodos.map((obj: object | any) => (\n            <Item\n              key={obj.id}\n              el={obj}\n              removeTodo={removeTodo}\n              onToggleStatus={onToggleStatus}\n            />\n          ))\n        ) : (\n          <Dump>nothing to show</Dump>\n        )}\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default observer(List);\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { destroy } from \"mobx-state-tree\"; //getSnapshot\nimport App from \"./App\";\nimport TodoStore from \"./models/todos\";\n//test todos\n// {\n//   label: \"first\",\n//   isReady: false,\n//   id: 0,\n// },\n// {\n//   label: \"second\",\n//   isReady: true,\n//   id: 1,\n// },\nconst initialState = {\n  todos: [],\n};\n\nlet store: any;\nlet snapshotListener: any;\n\nfunction createTodoStore(snapshot: any) {\n  if (snapshotListener) snapshotListener();\n  if (store) destroy(store);\n  store = TodoStore.create(snapshot);\n  return store;\n}\n\nfunction renderApp(App: any, store: any) {\n  render(<App store={store} />, document.getElementById(\"root\"));\n}\n\nrenderApp(App, createTodoStore(initialState));\n","import React from \"react\";\nimport Header from \"../Components/Header\";\nimport Content from \"../Components/Content\";\nimport Input from \"../Components/Input\";\nimport List from \"../Components/List\";\n\ninterface Iprops {\n  store: any;\n}\n\nconst TodoPage: React.FC<Iprops> = ({ store }) => {\n  return (\n    <>\n      <Header />\n      <Content>\n        <Input addTodo={store.addTodo} filtredTodos={store.filterTodos} />\n        <List store={store} />\n      </Content>\n    </>\n  );\n};\n\nexport default TodoPage;\n","import React from \"react\";\nimport { BaseStyle } from \"./baseStyles\";\nimport TodoPage from \"./pages/TodoPage\";\n\ninterface Iprops {\n  store: any;\n}\n\nconst App: React.FC<Iprops> = (props) => {\n  return (\n    <>\n      <BaseStyle />\n      <TodoPage store={props.store} />\n    </>\n  );\n};\n\nexport default App;\n","import { types, getRoot, destroy } from \"mobx-state-tree\";\n\nconst SHOW_ALL = \"show_All\";\n\nconst filterType = types.union(...[SHOW_ALL].map(types.literal));\nconst TODO_FILTERS = {\n  [SHOW_ALL]: () => true,\n};\n\nconst Todo = types\n  .model({\n    label: types.string,\n    isReady: false,\n    id: types.identifierNumber,\n  })\n  .actions((self) => ({\n    remove() {\n      getRoot(self).removeTodo(self);\n    },\n    toggle() {\n      self.isReady = !self.isReady;\n    },\n  }));\n\nconst TodoStore = types\n  .model({\n    todos: types.array(Todo),\n    filter: types.optional(filterType, SHOW_ALL),\n  })\n  .views((self) => ({\n    get filteredTodos() {\n      return self.todos.filter(TODO_FILTERS[self.filter]);\n    },\n  }))\n  .actions((self) => ({\n    addTodo(label) {\n      const id =\n        self.todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1;\n      self.todos.unshift({\n        id,\n        label,\n      });\n    },\n    removeTodo(todo) {\n      destroy(todo);\n    },\n    setFilter(filter) {\n      self.filter = filter;\n    },\n    filterTodos(key) {\n      self.todos = self.todos.filter(({ label }) => label.includes(key));\n    },\n  }));\n\nexport default TodoStore;\n"],"sourceRoot":""}